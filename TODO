Setup and Initialize Project
    Meets Expectations:
        ☐ The `.gitignore` file is in place and the `node_modules` folder is not stored in the repo @started(22-09-26 07:48)
        ☐ Running `npm install` adds all necessary dependencies @started(22-09-26 07:48)
        ☐ Running `npm start` launches the app @started(22-09-26 07:48)

Models
    Meets Expectations:
        ☐ Project includes the following Sequelize Model and properties: @started(22-09-26 07:48)
            ☐ Book @started(22-09-26 07:48)
                ☐ Title - `string` @started(22-09-26 07:48)
                ☐ Author - `string` @started(22-09-26 07:48)
                ☐ Genre - `string` @started(22-09-26 07:48)
                ☐ Year - `integer` @started(22-09-26 07:48)
        ☐ Uses the appropriate Model validation to ensure that the `title` and `author` properties will have values when the form is submitted @started(22-09-26 07:48)

Routes
    Meets Expectations:
        ☐ Project contains at least the following routes: @started(22-09-26 07:48)
            ☐ / - `get` @started(22-09-26 07:48)
            ☐ /books - `get` @started(22-09-26 07:48)
            ☐ /books/new - `get` @started(22-09-26 07:48)
            ☐ /books/new - `post` @started(22-09-26 07:48)
            ☐ /books/:id - `get` @started(22-09-26 07:48)
            ☐ /books/:id - `post` @started(22-09-26 07:48)
            ☐ /books/:id/delete - `post` @started(22-09-26 07:48)

Views
    Meets Expectations:
        ☐ Project contains at least the following views: @started(22-09-26 07:48)
            ☐ layout.pug @started(22-09-26 07:48)
            ☐ index.pug @started(22-09-26 07:48)
            ☐ new-book.pug @started(22-09-26 07:48)
            ☐ update-book.pug @started(22-09-26 07:48)
            ☐ error.pug @started(22-09-26 07:48)
            ☐ page-not-found.pug @started(22-09-26 07:48)
    
    Exceeds Expectations:
        ☐ Main book list has search feature @started(22-09-26 07:48)
        ☐ Search works for all of the following fields @started(22-09-26 07:48)
            ☐ Title @started(22-09-26 07:48)
            ☐ Author @started(22-09-26 07:48)
            ☐ Genre @started(22-09-26 07:48)
            ☐ Year @started(22-09-26 07:48)
        ☐ Search is case insensitive @started(22-09-26 07:48)
        ☐ Search works for partial matches on strings @started(22-09-26 07:48)
        ☐ Main book list has pagination feature @started(22-09-26 07:48)

Form Fields
    Meets Expectations:
        ☐ If `title` or `author` fields are empty, form will not submit and page shows friendly error message @started(22-09-26 07:48)
        ☐ Forms employ Sequelize Model validation rather than HTML's built in validation @started(22-09-26 07:48)
        ☐ Clicking on an input's label brings focus to corresponding input @started(22-09-26 07:48)

Errors
    Meets Expectations:
        ☐ If routing to a non-existent book id, project uses a `global error handler` to render a friendly "Page Not Found" or "error" page @started(22-09-26 07:48)
        ☐ If navigation to a non-existent route like `/noroute`, the project renders a user friendly "Page Not Found" page @started(22-09-26 07:48)

Styles and Layout
    Meets Expectations:
        ☐ Project uses supplied styles @started(22-09-26 07:48)
        ☐ General layout matches example markup pages @started(22-09-26 07:48)